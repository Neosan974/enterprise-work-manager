create table "public"."interventions" (
    "id" bigint generated by default as identity not null,
    "createdAt" timestamp with time zone not null default now(),
    "createdBy" uuid not null,
    "name" text not null,
    "description" text,
    "projectId" bigint not null
);


alter table "public"."interventions" enable row level security;

create table "public"."projects" (
    "id" bigint generated by default as identity not null,
    "createdAt" timestamp with time zone not null default now(),
    "name" text not null,
    "description" text
);


alter table "public"."projects" enable row level security;

create table "public"."tasks" (
    "id" bigint generated by default as identity not null,
    "createdAt" timestamp with time zone not null default now(),
    "createdBy" uuid not null default auth.uid(),
    "name" text not null,
    "description" text,
    "interventionId" bigint,
    "parentId" bigint
);


alter table "public"."tasks" enable row level security;

CREATE UNIQUE INDEX interventions_pkey ON public.interventions USING btree (id);

CREATE UNIQUE INDEX projects_pkey ON public.projects USING btree (id);

CREATE UNIQUE INDEX tasks_pkey ON public.tasks USING btree (id);

alter table "public"."interventions" add constraint "interventions_pkey" PRIMARY KEY using index "interventions_pkey";

alter table "public"."projects" add constraint "projects_pkey" PRIMARY KEY using index "projects_pkey";

alter table "public"."tasks" add constraint "tasks_pkey" PRIMARY KEY using index "tasks_pkey";

alter table "public"."interventions" add constraint "interventions_createdBy_fkey" FOREIGN KEY ("createdBy") REFERENCES auth.users(id) not valid;

alter table "public"."interventions" validate constraint "interventions_createdBy_fkey";

alter table "public"."interventions" add constraint "interventions_projectId_fkey" FOREIGN KEY ("projectId") REFERENCES projects(id) ON DELETE CASCADE not valid;

alter table "public"."interventions" validate constraint "interventions_projectId_fkey";

alter table "public"."tasks" add constraint "tasks_createdBy_fkey" FOREIGN KEY ("createdBy") REFERENCES auth.users(id) not valid;

alter table "public"."tasks" validate constraint "tasks_createdBy_fkey";

alter table "public"."tasks" add constraint "tasks_interventionId_fkey" FOREIGN KEY ("interventionId") REFERENCES interventions(id) ON DELETE CASCADE not valid;

alter table "public"."tasks" validate constraint "tasks_interventionId_fkey";

alter table "public"."tasks" add constraint "tasks_parentId_fkey" FOREIGN KEY ("parentId") REFERENCES tasks(id) ON DELETE CASCADE not valid;

alter table "public"."tasks" validate constraint "tasks_parentId_fkey";

grant delete on table "public"."interventions" to "anon";

grant insert on table "public"."interventions" to "anon";

grant references on table "public"."interventions" to "anon";

grant select on table "public"."interventions" to "anon";

grant trigger on table "public"."interventions" to "anon";

grant truncate on table "public"."interventions" to "anon";

grant update on table "public"."interventions" to "anon";

grant delete on table "public"."interventions" to "authenticated";

grant insert on table "public"."interventions" to "authenticated";

grant references on table "public"."interventions" to "authenticated";

grant select on table "public"."interventions" to "authenticated";

grant trigger on table "public"."interventions" to "authenticated";

grant truncate on table "public"."interventions" to "authenticated";

grant update on table "public"."interventions" to "authenticated";

grant delete on table "public"."interventions" to "service_role";

grant insert on table "public"."interventions" to "service_role";

grant references on table "public"."interventions" to "service_role";

grant select on table "public"."interventions" to "service_role";

grant trigger on table "public"."interventions" to "service_role";

grant truncate on table "public"."interventions" to "service_role";

grant update on table "public"."interventions" to "service_role";

grant delete on table "public"."projects" to "anon";

grant insert on table "public"."projects" to "anon";

grant references on table "public"."projects" to "anon";

grant select on table "public"."projects" to "anon";

grant trigger on table "public"."projects" to "anon";

grant truncate on table "public"."projects" to "anon";

grant update on table "public"."projects" to "anon";

grant delete on table "public"."projects" to "authenticated";

grant insert on table "public"."projects" to "authenticated";

grant references on table "public"."projects" to "authenticated";

grant select on table "public"."projects" to "authenticated";

grant trigger on table "public"."projects" to "authenticated";

grant truncate on table "public"."projects" to "authenticated";

grant update on table "public"."projects" to "authenticated";

grant delete on table "public"."projects" to "service_role";

grant insert on table "public"."projects" to "service_role";

grant references on table "public"."projects" to "service_role";

grant select on table "public"."projects" to "service_role";

grant trigger on table "public"."projects" to "service_role";

grant truncate on table "public"."projects" to "service_role";

grant update on table "public"."projects" to "service_role";

grant delete on table "public"."tasks" to "anon";

grant insert on table "public"."tasks" to "anon";

grant references on table "public"."tasks" to "anon";

grant select on table "public"."tasks" to "anon";

grant trigger on table "public"."tasks" to "anon";

grant truncate on table "public"."tasks" to "anon";

grant update on table "public"."tasks" to "anon";

grant delete on table "public"."tasks" to "authenticated";

grant insert on table "public"."tasks" to "authenticated";

grant references on table "public"."tasks" to "authenticated";

grant select on table "public"."tasks" to "authenticated";

grant trigger on table "public"."tasks" to "authenticated";

grant truncate on table "public"."tasks" to "authenticated";

grant update on table "public"."tasks" to "authenticated";

grant delete on table "public"."tasks" to "service_role";

grant insert on table "public"."tasks" to "service_role";

grant references on table "public"."tasks" to "service_role";

grant select on table "public"."tasks" to "service_role";

grant trigger on table "public"."tasks" to "service_role";

grant truncate on table "public"."tasks" to "service_role";

grant update on table "public"."tasks" to "service_role";

create policy "Enable read access for all authenticated users"
on "public"."interventions"
as permissive
for select
to authenticated
using (true);


create policy "Enable read access for all authenticated users"
on "public"."projects"
as permissive
for select
to authenticated
using (true);


create policy "Enable read access for all authenticated users"
on "public"."tasks"
as permissive
for select
to authenticated
using (true);



